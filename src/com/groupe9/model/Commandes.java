package com.groupe9.model;
// Generated 9 mars 2022, 10:44:53 by Hibernate Tools 4.3.5.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;

import static javax.persistence.GenerationType.IDENTITY;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Commandes generated by hbm2java
 */
@Entity
@Table(name = "commandes", catalog = "restaurant")
public class Commandes implements java.io.Serializable {

	private Integer id;
	private ClientExternes clientExternes;
	private Livreurs livreurs;
	private Paiements paiements;
	private Tables tables;
	private boolean typeClient;
	private Date dateCommande;
	private Set<ComandeBoissons> comandeBoissonses = new HashSet<ComandeBoissons>(0);
	private Set<ComandePlats> comandePlatses = new HashSet<ComandePlats>(0);

	public Commandes() {
	}

	public Commandes(boolean typeClient, Date dateCommande) {
		this.typeClient = typeClient;
		this.dateCommande = dateCommande;
	}

	public Commandes(ClientExternes clientExternes, Livreurs livreurs, Paiements paiements, Tables tables,
			boolean typeClient, Date dateCommande, Set<ComandeBoissons> comandeBoissonses,
			Set<ComandePlats> comandePlatses) {
		this.clientExternes = clientExternes;
		this.livreurs = livreurs;
		this.paiements = paiements;
		this.tables = tables;
		this.typeClient = typeClient;
		this.dateCommande = dateCommande;
		this.comandeBoissonses = comandeBoissonses;
		this.comandePlatses = comandePlatses;
	}

	@Id
	@GeneratedValue(strategy = GenerationType.AUTO)

	@Column(name = "id", unique = true, nullable = false)
	public Integer getId() {
		return this.id;
	}

	public void setId(Integer id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "client_externe_id")
	public ClientExternes getClientExternes() {
		return this.clientExternes;
	}

	public void setClientExternes(ClientExternes clientExternes) {
		this.clientExternes = clientExternes;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "livreur_id")
	public Livreurs getLivreurs() {
		return this.livreurs;
	}

	public void setLivreurs(Livreurs livreurs) {
		this.livreurs = livreurs;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "paiement_id")
	public Paiements getPaiements() {
		return this.paiements;
	}

	public void setPaiements(Paiements paiements) {
		this.paiements = paiements;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "table_id")
	public Tables getTables() {
		return this.tables;
	}

	public void setTables(Tables tables) {
		this.tables = tables;
	}

	@Column(name = "type_client", nullable = false)
	public boolean isTypeClient() {
		return this.typeClient;
	}

	public void setTypeClient(boolean typeClient) {
		this.typeClient = typeClient;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "date_commande", nullable = false, length = 19)
	public Date getDateCommande() {
		return this.dateCommande;
	}

	public void setDateCommande(Date dateCommande) {
		this.dateCommande = dateCommande;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commandes")
	public Set<ComandeBoissons> getComandeBoissonses() {
		return this.comandeBoissonses;
	}

	public void setComandeBoissonses(Set<ComandeBoissons> comandeBoissonses) {
		this.comandeBoissonses = comandeBoissonses;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "commandes")
	public Set<ComandePlats> getComandePlatses() {
		return this.comandePlatses;
	}

	public void setComandePlatses(Set<ComandePlats> comandePlatses) {
		this.comandePlatses = comandePlatses;
	}

}
